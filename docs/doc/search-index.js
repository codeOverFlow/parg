var searchIndex = JSON.parse('{\
"parg":{"doc":"","i":[[3,"Arg","parg","This structure represents an Argument for the command line…",null,null],[3,"CliArguments","","Argument Engine looking for all `Arg`.",null,null],[4,"Type","","This enum indicates the expected type of the argument value.",null,null],[13,"ReadAsU8","","Value is expected to be `u8`.",0,null],[13,"ReadAsU16","","Value is expected to be `u16`.",0,null],[13,"ReadAsU32","","Value is expected to be `u32`.",0,null],[13,"ReadAsU64","","Value is expected to be `u64`.",0,null],[13,"ReadAsU128","","Value is expected to be `u128`.",0,null],[13,"ReadAsUsize","","Value is expected to be `usize`.",0,null],[13,"ReadAsI8","","Value is expected to be `i8`.",0,null],[13,"ReadAsI16","","Value is expected to be `i16`.",0,null],[13,"ReadAsI32","","Value is expected to be `i32`.",0,null],[13,"ReadAsI64","","Value is expected to be `i64`.",0,null],[13,"ReadAsI128","","Value is expected to be `i128`.",0,null],[13,"ReadAsIsize","","Value is expected to be `isize`.",0,null],[13,"ReadAsF32","","Value is expected to be `f32`.",0,null],[13,"ReadAsF64","","Value is expected to be `f64`.",0,null],[13,"ReadAsBool","","Value is expected to be `bool`.",0,null],[13,"ReadAsChar","","Value is expected to be `char`.",0,null],[13,"ReadAsString","","Value is expected to be `String`.",0,null],[11,"get_name","","Get the name of the `Arg`.",1,[[],["string",3]]],[11,"set_description","","Sets the `Arg` description.",1,[[]]],[11,"with_default_value","","Construct an `Arg` expecting a value and having a default…",1,[[["type",4],["any",8],["box",3]],["arg",3]]],[11,"with_value","","Construct an `Arg` expecting a value.",1,[[["type",4]],["arg",3]]],[11,"without_value","","Construct an `Arg` expecting no value.",1,[[],["arg",3]]],[11,"new","","Construct a new CliArguments.",2,[[["btreemap",3],["string",3],["arg",3]],["cliarguments",3]]],[11,"exists","","Check if an `Arg` exists.",2,[[]]],[11,"generate_usage","","Generate a text to explain usage",2,[[],["string",3]]],[11,"get_value","","Get the value of the `arg_name` argument.",2,[[],["clone",8]]],[11,"parse","","Parse the command line arguments.",2,[[],[["result",4],["string",3]]]],[11,"set_info","","Sets the cli name and description.",2,[[]]],[14,"create_cli_arguments","","Create a `CliArguments` with all `Arg` given to the macro.",null,null],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_string","","",2,[[],["string",3]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]]],"p":[[4,"Type"],[3,"Arg"],[3,"CliArguments"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);